heat_template_version: 2013-05-23

description: >
  HOT template to deploy two servers (database and web server) into an existing
  neutron tenant network and create a load balancer.  The load balancer will be
  assigned a floating IP addresses to route traffic from the internet to the web
  servers.  Alarms ar create to scale the web server up and down based on CPU
  utilization rates. Based on repo: https://github.com/infrastacklabs/autoscale-lb

parameters:
  key_name:
    type: string
    description: Name of an existing key pair to use for the template
    default: Openstack test
  image:
    type: string
    description: Name of image to use for servers
    default: Ubuntu 18.04 LTS Bionic Beaver
  flavor:
    type: string
    description: Flavor to use for servers
    default: a1-ram2-disk80-perf1
  db_name:
    type: string
    description: WordPress database name
    default: wordpress
  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
  db_password:
    type: string
    description: The WordPress database admin account password
    default: admin
  db_rootpassword:
    type: string
    description: Root password for MySQL
    default: admin
    hidden: true
  public_net_id:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
    default: ext-floating1
  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
    default: private-network
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
    default: private-subnet

resources:
  wp_dbserver:
    type: OS::Nova::Server
    properties:
      name: wp_db_server
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      networks:
        - port: { get_resource: wp_dbserver_port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __mysql_root_password__: {get_param: [db_rootpassword, value]}
            __database_name__: {get_param: db_name}
            __database_user__: {get_param: db_username}
            __database_password__: {get_param: [db_password, value]}
          template: |
            #!/bin/bash
            apt-get update
            export DEBIAN_FRONTEND=noninteractive
            apt-get install -y mysql-server
            mysqladmin -u root password "__mysql_root_password__"
            sed -i "s/bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/my.cnf
            service mysql restart
            mysql -u root --password="__mysql_root_password__" <<EOF
            CREATE DATABASE __database_name__;
            CREATE USER '__database_user__'@'localhost';
            SET PASSWORD FOR '__database_user__'@'localhost'=PASSWORD("__database_password__");
            GRANT ALL PRIVILEGES ON __database_name__.* TO '__database_user__'@'localhost' IDENTIFIED BY '__database_password__';
            CREATE USER '__database_user__'@'%';
            SET PASSWORD FOR '__database_user__'@'%'=PASSWORD("__database_password__");
            GRANT ALL PRIVILEGES ON __database_name__.* TO '__database_user__'@'%' IDENTIFIED BY '__database_password__';
            FLUSH PRIVILEGES;
            EOF

  wp_dbserver_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
  web_server_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 2
      max_size: 4
      resource:
        type: Lib::INF::LB
        properties:
          flavor: {get_param: flavor}
          image: {get_param: image}
          key_name: dev
          pool: {get_resource: pool}
          metadata: {"metering.server_group": {get_param: "OS::stack_id"}}
          user_data:
            str_replace:
              template: |
                #!/bin/bash -ex
                sed -i 's/172.16.*.*/8.8.8.8/g' /etc/resolv.conf
                # install dependencies
                apt-get update
                apt-get -y install php5 libapache2-mod-php5 php5-mysql php5-gd mysql-client
                wget http://wordpress.org/latest.tar.gz
                tar -xzf latest.tar.gz
                cp wordpress/wp-config-sample.php wordpress/wp-config.php
                sed -i 's/database_name_here/$db_name/' wordpress/wp-config.php
                sed -i 's/username_here/$db_user/' wordpress/wp-config.php
                sed -i 's/password_here/$db_password/' wordpress/wp-config.php
                sed -i 's/localhost/$db_host/' wordpress/wp-config.php
                rm /var/www/html/index.html
                cp -R wordpress/* /var/www/html/
                chown -R www-data:www-data /var/www/html/
                chmod -R g+w /var/www/html/
              params:
                $db_name: {get_param: db_name}
                $db_user: {get_param: db_username}
                $db_password: {get_param: [db_password, value]}
                $db_host: {get_attr: [wp_dbserver, first_address]}
  web_server_scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: web_server_group}
      cooldown: 60
      scaling_adjustment: 1
  web_server_scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: web_server_group}
      cooldown: 60
      scaling_adjustment: -1

  cpu_alarm_high:
    type: OS::Aodh::Alarm
    properties:
      description: Scale-up if the average CPU > 50% for 1 minute
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 50
      alarm_actions:
        - {get_attr: [web_server_scaleup_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt

  cpu_alarm_low:
    type: OS::Aodh::Alarm
    properties:
      description: Scale-down if the average CPU < 15% for 1 minute
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 15
      alarm_actions:
        - {get_attr: [web_server_scaledown_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt

  lb_vip_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
       - subnet_id: { get_param: private_subnet_id }

  lb_vip_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: lb_vip_port }

  lb_pool_vip:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: lb_vip_floating_ip }
      port_id: { 'Fn::Select': ['port_id', {get_attr: [lb, vip_address]}]}

  pool:
    type: OS::Octavia::Pool
    properties:
      protocol: HTTP
      lb_algorithm: ROUND_ROBIN
      listener: {get_resource: listener}
  monitor:
    type: OS::Octavia::HealthMonitor
    properties:
      type: TCP
      delay: 6
      max_retries: 5
      timeout: 5
      pool: {get_resource: pool}
  lb:
    type: OS::Octavia::LoadBalancer
    properties:
      vip_subnet: { get_param: private_subnet_id }

  listener:
    type: OS::Octavia::Listener
    properties:
      loadbalancer: {get_resource: lb}
      name: myListener
      protocol: HTTP
      protocol_port: 80

outputs:
  scale_up_url:
    description: >
      This URL is the webhook to scale up the group.  You can invoke
      the scale-up operation by doing an HTTP POST to this URL; no
      body nor extra headers are needed.
    value: {get_attr: [web_server_scaleup_policy, alarm_url]}
  scale_dn_url:
    description: >
      This URL is the webhook to scale down the group.  You can invoke
      the scale-down operation by doing an HTTP POST to this URL; no
      body nor extra headers are needed.
    value: {get_attr: [web_server_scaledown_policy, alarm_url]}
